# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RJ323j5vYk-3sFeqcbw4ObyfOKsiHy4I
"""

import firebase_admin
from firebase_admin import credentials, storage
import csv

# Initialize Firebase Admin SDK
cred = credentials.Certificate('/vprimagesearch-firebase-adminsdk-rmdc1-f060537ae7.json')
firebase_admin.initialize_app(cred, {
    'storageBucket': 'vprimagesearch.appspot.com'
})

# Path to your existing CSV file
existing_gallery = '/gallery.csv'

# Function to check if an image exists in Firebase Storage and get its Firebase storage path
def check_and_get_firebase_storage_path(image_name):
    bucket = storage.bucket()
    blob = bucket.blob(image_name)
    if blob.exists():
        return blob.public_url
    else:
        return None

with open(existing_gallery, 'r') as csvfile:
    csv_reader = csv.reader(csvfile)
    rows = [row for row in csv_reader if row]

sorted_rows = sorted(rows, key=lambda x: x[1])

for row in sorted_rows:
  row[1]  = row[1].replace("gallery/", "")

for row in sorted_rows:
        if len(row) > 0:
            image_name = row[1]  # Assuming the image name is in the first column
            firebase_path = check_and_get_firebase_storage_path(image_name)
            if firebase_path:
                print("loading")
                row.append(firebase_path)
            rows.append(row)

sorted_rows[:5]

# Path to the new CSV file
new_csv_file_path = '/Imagepaths.csv'

# Define the column headers
column_headers = ['ID', 'Image Name', 'product_id', 'Image URL']

# Path to the new CSV file
new_csv_file_path = '/Imagepaths.csv'

# Write the data to the new CSV file with defined columns
with open(new_csv_file_path, 'w', newline='') as csvfile:
    csv_writer = csv.writer(csvfile)

    # Write the column headers
    csv_writer.writerow(column_headers)

    # Write the data rows
    csv_writer.writerows(sorted_rows)

